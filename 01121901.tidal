do
   d3 $
      while "t(3,8,<0 2 3 4>)" (|* gain 0.76) $
      -- whenmod 8 6 (chunk 4 (hurry 2)) $
      every 6 (|+ speed "0.4 0.2 -0.1") $
      -- whenmod 7 5 (0.125 ~>) $
      fix (|* gain 0.95) (s "super808") $
      every 2 (|- accelerate "0.66 0.5 0.25 0.5") $
      every 4 (+| voice "0.66 0.5 0.25 0.5") $
      every 3 (|+ pitch1 "0 1 2 3 1 2 4") $
      whenmod 5 3 (|+| speed "0.5") $
      every 2 (|< sustain  2) $
      s "[[~ superhat*2]*<2 4> super808*<1 2 4 8> ~ supersnare*<2 8 16>, super808(<3 5 7 9 12>,8,<11 14 6 2>)]"
      # n (every 2 (0.25 <~) $ every 4 (rev) $ "1 2 0 1 2 3 1 3 2 4")
      # gain 0.9
      # orbit 0

d1 $ silence
      -- # cps 0.7

      hush


      d1 $
      every 4 (|*| voice "{0.025 0.0015 0 0.075 0.0001 0.018}%3 ") $
      s "super808*8"
  -- # n "0 1"
  # sustain "1 2 3 0.6 1 2"
  # speed "2 0.2 0.7 0.1"
  -- # accelerate  "0 0.5 0.7 1 2"
  -- # pitch1 "0.5 1 2 3"
  -- |- cut "1 2 3 -1 0 4 6 2 4"
  # gain 0.86
  -- # octave "1 -2 3 -4"

d1 $
    stack [
      s "supersnare*8"
      # n (run 8)
      -- # sustain "0.1 1 0.25 1 0.53"
      # cut "1 2 3 4 0 -1"
      # accelerate "0.7 1 2 3"
      # decay  "0 1 2 3 0.5 0.1 -2"
      # gain 0.9
      ,
      -- every 4 (|*| voice "{0.025 0.0015 0 0.075 0.0001 0.018}%3 ") $
      s "super808*8"
      -- # n "0 1"
      # sustain "1 2 3 0.6 1 2"
      # speed "2 0.2 0.7 0.1"
      -- # accelerate  "0 0.5 0.7 1 2"
      -- # pitch1 "0.5 1 2 3"
      -- |- cut "1 2 3 -1 0 4 6 2 4"
      -- # octave "1 -2 3 -4"
      # gain 0.9
      ,
      s "superhat(<8 16 32 8 16 8>*3,8,<0 1 2 4>)"
      # n "0 1 2 3 0"
      # sustain ("0.24 0.5 0.9 1 1.3 0.4 -1" + (slow 12 $ range 0 0.4 cosine))
      # voice "{0.1 0.3 4 1 3 4}%5"
      # gain (slow 7 $ range 0.7 0.85 tri)
      ,
      rot "<0 1 2>*2" $
      every 4 (chunk 4 (hurry 2)) $
      s "~ superclap*<1 2>"
      # delay "0 0.1 0.3 0.4 0.8"
      +| speed "0.1 0.3 0.1 3 1 3"
      # pitch1 "1 2 3 0.7 0.2 1"
      # sustain "1 2"
      ,
      s "superkick*<16 32/6 16 8>"
      -- # n "1 2 3 4"
      # sustain "0.6 0.1 0.3 0.3"
      # voice "0 1 2 3"
      # cut "1 2 3 4 5"
      # release "0.1 0.3 0.5"
      # decay "0.3 0.1 0.3 0.5"
      # shape 0.3
      ]

d3 $ every 2 (chunk 8 (hurry "<8@0.5 5@2 3 4@<0.5 3>>")) $
  every 4 (stutWith  4 0.0125 (|* speed "{1@0.5 2@2 3 4@<0.5 2>}%3")) $
  every 2 (0.0625 <~) $
  rot "<1 2 3 1>" $
  every 7 (# scram "3.1 1.8 1.7 4.3") $
  whenmod 8 5 (jux (# amdist "0 0.5 1 0.3 1").(# amdistf "5 20 100 40 13")) $
  s "bk(<8 4 2 8>,<4 8 2>,<7 3 9>)"
  # fmdist (slow 2 $ every 2 (0.25 <~) $ "0 0.5 0.7 1 0.1 0.4 0")
  # fmdistf "2 0 1 3 3 1 3 4 1 3"
  # krush "0.2 0 0 0.3 0 0 1 0.3 2 "
  # coarse "0 1 3 4 1 3 1"
  -- # tsdelay 0
  -- # xsdelay 0
  |+ n (run 4)
  # cut "1 2 3 5"
  # hpf 80
  # orbit 0


  d3 $
    stack [
     whenmod 16 14 (# s "~") $
     whenmod 5 3 (stut' 4 (0.125*3) (|*| speed "1.5")) $
     whenmod 8 6 (jux (chunk 4 (hurry 2))) $
     whenmod 5 3 (spin 4) $
     -- whenmod 8 6 (iter 2) $
     -- slow 2 $
     s "can*2 cs*1 notif*1 "
     |+ n (every 3 (0.25 ~>) $ "6 6")
     |* cut "1 3 4"
     ,
     every 8 (# s "~") $
     every 4 (every 2 (slow 2). density (8/3)) $
     s "dk:7(<3 5>,<8 9>,2)"
     ,
     every 4 (# s "~") $
     s "~ as*<2 3>"
     ,
     whenmod 8 6 (slow 2 . (# s "~")) $
     every 3 (0.125 <~) $
     every 8 (|* speed "0.25") $
     density (8/3) $
     s "bf*2 dt*4 tables*2 stab*4 "
     |+ n (every 2 (0.25 <~) $ every 1 (density 3) $ every 4 (slow 4) $ every 2 (0.25 ~>) $ run 10)
     *| cut "4 4 1 -1 3 3 -1 4"
     ]
     # orbit 0

hush


do
   d1 $
      whenmod 12 6 (rev) $
      whenmod 6 4 (density 2) $
      every 16 (density 2) $
      every 16 (linger 0.25) $
      s "super808*2 tk*4 superhat*1 cymbal808_ryan*2 "
      |- n (every 3 (rev) $ every 2 (0.25 ~>) $ every 1 (palindrome) $ run 10)
      |- up "6 2"

do
   d1 $
      whenmod 12 6 (|*| accelerate "0.25 1.75") $
      whenmod 7 5 (iter 2) $
      every 6 (spin 2) $
      whenmod 5 3 (spin 4) $
      s "super808*4 babbl*4 tk*8 supersnare*1 "
      |+ n (every 1 (slow 1.25) $ every 2 (0.25 ~>) $ "0 5 1 0")
      |+ up "1 6 -2 3 5 5 -1 -2 6 2 4 -4 1 1"


      hush

      hush
