-- ici c'est tout en 10

   d1 $
    seqPLoop [
      (0,31, whenmod 8 5 (spin 2) $
      every 5 (0.5 <~) $
      every 6 (outside 2 (rev). iter' 2) $
      stack [
        s "~ ugsnare:5(2,5,7)"
        # hpf 3000
        # sustain "0.6 0.5 0.1 0.6"
        ,
        s "kick_oto309(<3 [8 2] 7>,10,6)"
        # decay "0.6 1 0.2"
        # sustain "<0.1 0.6 0.5 0.2>"
        # release "<0.3 0.6 0.1 0.2 0.6>"
        ,
        every 6 (|*| freq "250 200 500") $
        whenmod 5 3 (|*| attack "0.6 0.3") $
        s "tempp(<1 3 5 1>,10,<3 7>) "
        # decay "0.1 0.05 0.15"
        # sustain "0.1 0.05 0.15 0.2"
        # begin "<0.1 0.15 0.23 0.2>"
        # end "<0.25 0.24 0.3 0.26>"
        # loop "<1 2 3 4>"
        + speed "<1 1.5 2 3 1.6>"
        |+ n (every 2 (0.25 <~) $ every 4 (slow 3) $ "0 11 10 6")
      ]
      |- up "8 3"
      # cut "-1 4 -3")
      ,
      (32,63, whenmod 8 5 (slow 2 . spin 4) $
      every 16 (linger "0.25 0.2") $
      every 6 (off 0.2 (ply "2 3")) $
      stack [
        s "~ ugsnare 5(<5 9 7 3 5 9>,10,15)"
        # hpf 3000
        # sustain "0.6 0.5 0.1 0.6"
        # decay "0.6 1 0.2"
        # sustain "<0.1 0.6 0.5 0.2>"
        ,
        s "kick_oto309(<[3 [5 2]] [7 3] 8 2>,10,<6 7 12>)"
        # decay "0.6 1 0.2"
        # sustain "<0.1 0.6 0.5 0.2>"
        # release "<0.3 0.6 0.1 0.2 0.6>"
        ,
        whenmod 8 6 (density 4) $
        s "~ brop(4,10,<7 3 1 5>)"
        # decay "0.6 1 0.2"
        # sustain "<0.1 0.6 0.5 0.2>"
        # begin "<0.1 0.15 0.23 0.2>"
        # end "<0.25 0.24 0.3 0.26>"
        # loop "<1 2 3 4>"
        ,
        s "tempp(<1 [5 1] [5 3] 1 5>,10,<3 7>) "
        # decay "0.1 0.05 0.15"
        # sustain "0.1 0.05 0.15 0.2"
        # begin "<0.1 0.15 0.23 0.2>"
        # end "<0.25 0.24 0.3 0.26>"
        # loop "<1 2 3 4>"
        + speed "<1 1.5 2 3 1.6>"
        |+ n (every 2 (slow 1.25) $ every 2 (slow 1.5) $ every 3 (0.25 <~) $ "10 6 10 11 ")
      ]
      |- up "7 -1 8"
      # cut "-1 -4 4")
      ]

   d3 $
      whenmod 7 5 (slow (8/5)) $
      every 8 (((|*| fshift "0.2") . (|*| fshiftnote "0.17 1 2") . (|*| fshiftphase "0.01 0.2"))) $
      every 2 (slow 2) $
      stack [
      s " supergong*2 fi*1 grh*2 dt*4 ~"
      |+ n (every 2 (slow 4) $ "1 7 2")
      |- up "7 6 -1 -1 -2 1 -2 -1 1"
      # cut "1 -1"
          ]
