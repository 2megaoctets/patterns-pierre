   d1 $
   stack [
      whenmod 6 4 (spin "<2 3 4>") $
      every 5 (0.5 ~>) $
      stack [
        slow 2 $
        s "jpnperc:2(2,4,3)"
        ,
        s "ec:1(<2 3>,4,1)"
        ,
        s "et:1(<2 3>,4)"
        ,
        s "can:0(<0 1 2>,4,<1 2>)"
      ]
      # n (every 3 (palindrome) $ "5 8 5")
      # cut "-1"
      ,
      every 3 (degrade) $
      stack [
      slow 2 $
        s "hats:2(<2 4 5 7 12>,16,24)"
        ,
        s "eau:1(<1 3>,8,<9 12 24>)"
        ,
        s "ci:2(1,16,24)"
        ,
        whenmod 8 6 (# s "~") $
        s "et:3(2,4,<0 3>) "
      ]
      # n (every 2 (palindrome) $ "8 8 2 7 0 3 4 2 9 12 9")
      # up "2 3"
      ,
      every 3 (# pan (tri)) $
      whenmod 5 2 (0.5 ~>) $
      stack [
        seqPLoop [
        (0,15, slow 2 $
          stack [
            s "el(1,8,<2 3 12>)"
            ,
            s "hats(<8 12 14>,16,17)"
            ,
            s "superclap(<0 1>,4,<1 3>)"
            ,
            whenmod 6 4 (0.125 ~>) $
            s "~ claps:1*2"
          ]
        # n (every 4 (rev) $ every 4 (density 3) $ "0 5 7 7 4 3 1 7")
        # cut "1 4")
        ,
        (16,31,
        whenmod 6 4 (rev) $
        every 5 (0.5 ~>) $
        every 4 (0.125 <~) $
          stack [
            slow 2 $ s "el:3(1,8,<2 3 12>)"
            ,
            s "future(<8 12 14>,16,17)"
            ,
            s "dp:1(<0 1>,4,<1 3>)"
            ,
            s "~ claps:1*2 "
          ]
            # n (every 2 (density 4) $ every 3 (0.25 ~>) $ run 3)
            # cut "-1")
        ]
      ]
    ]


hush

   d2 $
      every 3 (degrade) $
      slow 2 $ s "hats*2 eau*1 ci*1 et*2 "
      # n (every 2 (palindrome) $ "8 8 2 7 0 3 4 2 9 12 9")
      # cut "2 3"

   d3 $
      every 3 (# pan "0") $
      every 2 (((# delay "0.2") . (# delaytime "0.001 0.001") . (# delayfeedback "0.9"))) $
      whenmod 5 2 (0.5 ~>) $
      whenmod 6 4 (0.125 ~>) $
      slow 2 $ s "el*1 hats*8 claps*2 claps*8 "
      # n (every 4 (rev) $ every 4 (density 3) $ "0 5 7 7 4 3 1 7")
      # cut "4"

do
   d1 $ silence


   d2 $
      s "bozkurt"
      # coarse (every 2 (slow 1.5) $ every 3 (0.25 ~>) $ every 5 (0.25 ~>) $ every 2 (0.25 ~>) $ every 4 (rev) $ run 10)
      # cut "2 -1 4 1 1 4 2 1 4 -1 2 3 4 3"

   d3 $
      every 3 (spin "<0 1 2>") $
      stack [
      every 2 (slow 2) $
      "ps(<1 3 0>,4,<0 1>)"
      ,
      s "hold(<2 3 1>,8,<3 1>)"
      ,
      s "~ claps(<1 3 0>,4,<0 1>)"
      ,
      s "donk(<1 0 0 2>,4,<0 1>) "
      ]
      # coarse (every 4 (rev) $ every 4 (density 3) $ "0 5 7 7 4 3 1 7")
      # cut "-1"
      # orbit 0

      slow 2 $ s "hats*2 ai*8 ci*1 et*2 "

hush


   d1 $
      stack [
        every 7 ((slow 2).(# s "~")) $
        every 2 (|+ n 1) $
        whenmod 5 2 (spin 4) $
        whenmod 8 6 (trunc (3/8)) $
        slow 2 $ s "ek:1*8 hats*2 ~ superkick*4 "
        |-| n (every 1 (slow 1.5) $ every 3 (0.25 ~>) $ every 1 (0.25 ~>) $ every 1 (0.25 ~>) $ every 4 (rev) $ run 2)
        # cut "1 1 2 3 1"
        # voice "0 1"
        ,
        whenmod 11 7 ((slow 2).(# s "~ [~ d*2]")) $
        every 7 (palindrome) $
        every 3 (degrade) $
        every 6 (spin 4) $
        seqPLoop [
          (0,15, whenmod 7 5 (jux (rot 2)) $
          every 4 (0.125 <~) $
          whenmod 7 5 (0.125 <~) $
          slow 2 $ s "hhh*8 future*8 el*4 dp*8 "
          # n (every 3 (palindrome) $ "7 11 12 9 7")
          # cut "-1")
          ,
          (16,31, every 7 (# coarse "0 4 0 1 0 2") $
          every 2 (((# delay "0.8") . (# delaytime "0.001 0.001") . (# delayfeedback "0.9"))) $
          whenmod 6 4 (0.125 ~>) $
          every 6 (0.125 <~) $
          every 2 (spin 2) $
          whenmod 7 5 (0.125 <~) $
          slow 2 $ s "hhh*8 future*8 el*4 dp*8 "
          # n (every 2 (palindrome) $ "7 11 12 9 7")
          # cut "-1 4")
          ,
          (32,47, every 5 (0.5 ~>) $
          every 4 (0.125 <~) $
          whenmod 7 5 (0.125 <~) $
          slow 2 $ s "hhh*4 future*2 el*1 can*2 "
          # n (every 2 (density 4) $ every 3 (0.25 ~>) $ run 1)
          # cut "-1")
        ]
        ,
        every 4 (# s "~") $
        seqPLoop  [
          (0,15, whenmod 8 5 (jux (rev)) $
          every 3 (# pan "0") $
          whenmod 5 2 (0.5 ~>) $
          every 5 (chunk 4 (hurry 1.5)) $
          whenmod 7 4 (0.25 ~>) $
          slow 2 $ s "bs*1 hold*4 grcm*2 sub:6*4 "
          # n (every 4 (0.25 ~>) $ every 1 (palindrome) $ "1 9 4 0")
          # cut "-1")
          ,
          (16,31, every 3 (# coarse "0 1 2 3") $
          every 5 (# accelerate "0.4 0.1 0.2") $
          every 5 (density 1.5) $
          whenmod 7 4 (0.25 ~>) $
          slow 2 $ s "bs*1 foleyperc:1*4 grcm*2 sub:7*8 "
          # n (every 4 (0.25 ~>) $ every 1 (palindrome) $ "1 9 4 0")
          # cut "-1 0 1")
        ]
    ]



hush


do
   d1 $

   d3 $



   d1 $
      stack [
      whenmod 8 6 (0.5 ~>) $
      slow 2 $
      s (fmap ["brok","grsn","ek"]!!) $ (markovPat 8 1 [[2,4,3],[4,4,2],[0,1,0]])
      # cut "1"
      ,
      whenmod 7 5 (jux (rev)) $
      every 6 (spin 4) $
      s (fmap (["ek", "bt", "ec"]!!) $ markovPat 4 2 [[1,2,3],[4,2,1],[1,0,1]])
      ]
      # n (every 1 (0.25 <~) $ "3 11 7 5 3 7 0 8 10 2 5 4 8 4 2")

   d2 $
      whenmod 5 3 (trunc (3/8)) $
      whenmod 6 3 (0.125 <~) $
      whenmod 5 2 (spin 4) $
      whenmod 8 6 (trunc (3/8)) $
      slow 2 $ s "et*1 hats*2 ec*2 hold*2 "
      # n (every 3 (0.25 <~) $ "4 10")
      # cut "2"

   d3 $
      whenmod 7 4 (trunc (3/8)) $
      every 5 (# shape "0.4 0.1 0.2") $
      every 1 (0.125 ~>) $
      slow 2 $ s "grcp*4 ci*2 grcm*2 grk*8 "
      # n (every 3 (0.25 <~) $ every 3 (slow 3) $ run 5)
      # cut "-1 3 4 2"



do
   d1 $
      whenmod 6 3 (0.125 <~) $
      whenmod 5 2 (slow 1.5) $
      whenmod 8 6 (0.5 ~>) $
      -- slow 2 $
      s " grsn*2 ek*2 ~ hold*4 "
      -- s (fmap [" grsn*2" "ek*2" "hold*4 "]!!) $
      -- markovPat 8 1 [[3,5,2],[4,2,2],[0,1,0]]
      # n (every 1 (0.25 <~) $ "3 11 7 5 3 7 0 8 10 2 5 4 8 4 2")
      # cut "3 1 4 -1 3 4 2 2"

   d2 $
      every 1 (trunc (3/8)) $
      whenmod 6 3 (0.125 <~) $
      whenmod 5 2 (# shape "0.1") $
      whenmod 8 6 (trunc (3/8)) $
      slow 2 $ s "et*8 hats*2 ec*4 hold*2 "
      # n (every 3 (0.25 <~) $ "4 10")
      # cut "2"

   d3 $
      whenmod 7 4 (trunc (3/8)) $
      whenmod 6 4 (degrade) $
      every 3 (stut' 3 (0.0625*3) (|*| speed "1.5")) $
      slow 2 $ s "grcp*8 ci*1 grcm*2 grk*8 "
      # n (every 3 (palindrome) $ every 4 (rev) $ every 1 (0.25 ~>) $ "11 12 4 0 12 10 9")
      # cut "-1 3 4 2"

do
   d1 $
      whenmod 6 3 (0.125 <~) $
      -- every 1 (0.5 <~) $
      whenmod 7 4 (degrade) $
      -- slow 2 $
      s "brok*2 grsn*8 ~ bros*4 "
      # n (every 2 (0.25 ~>) $ run 6)
      # cut "-1"

   d2 $
      whenmod 7 4 (# speed "-1") $
      whenmod 5 2 (# shape "0.1") $
      every 4 (0.25 <~) $
      slow 2 $ s "ek*2 bt*4 ec*8 jpnperc*2 "
      # n (every 2 (density 1.25) $ every 3 (slow 4) $ run 7)
      # cut "1"

   d3 $
      every 5 (stut' 1 (0.125*3) (|*| speed "1.5")) $
      every 6 (trunc (3/8)) $
      whenmod 6 4 (degrade) $
      every 1 (stut' 3 (0.0625*3) (|*| coarse "1.5")) $
      slow 2 $ s "can*8 if*4 future*2 grk*2 "
      # coarse (every 3 (palindrome) $ every 4 (rev) $ every 1 (0.25 ~>) $ "11 12 4 0 12 10 9")
      # cut "-1"

do
   d1 $
      every 5 (spin 3) $
      whenmod 7 4 (degrade) $
      slow 2 $ s "brok*2 grsn*8 31*8 bros*2 "
      # n (every 1 (0.25 <~) $ every 4 (palindrome) $ run 8)
      # cut "2 2 1 3 2 3 4"

   d2 $
      every 3 ((slow 12 . striate 8)) $
      every 1 (# speed "0.5") $
      whenmod 7 5 (chop 8) $
      slow 2 $ s "grk*8 bt*1 bin*1 jpnperc*4 "
      # n (every 1 (rev) $ run 2)
      # cut "2 3 1 2"
   d3 $
      whenmod 6 3 (0.25 ~>) $
      every 6 (trunc (3/8)) $
      whenmod 7 4 (0.5 ~>) $
      whenmod 7 5 (palindrome) $
      slow 2 $ s "can*8 eau*4 grcm*2 ep*4 "
      # n (every 3 (density 3) $ every 3 (0.25 <~) $ every 3 (density 1.5) $ "1 10 0")
      # cut "4 4 1 2 2 2 1 2 2 2 1 3 -1"
do
   d1 $
      every 1 (spin 4) $
      every 5 (slow 3) $
      slow 2 $ s " bs*1 claps*2 d*1 "
      # n (every 4 (0.25 <~) $ every 3 (density 4) $ every 1 (slow 2) $ "9 4 1 11 2 10 8 5 6 11 8 7")
      # cut "3 3 2 -1 4 3 4 -1 -1"
   d2 $
      every 2 (chop 16) $
      every 3 (# up "3") $
      whenmod 8 6 (spin 2) $
      every 5 (# shape "0.4 0.3") $
      slow 2 $ s "grcm*4 foleyperc*2 broh*4 d*2 "
      # n (every 1 (0.25 ~>) $ every 2 (density 2) $ every 3 (rev) $ every 2 (0.25 <~) $ every 2 (0.25 ~>) $ every 1 (density 3) $ every 1 (0.25 <~) $ every 1 (density 2) $ run 12)
      # cut "2"
   d3 $
      whenmod 8 6 (0.125 <~) $
      whenmod 8 6 (trunc (3/8)) $
      whenmod 7 4 (slow (8/3)) $
      slow 2 $ s "el*2 claps*2 jpnperc*2  "
      # n (every 3 (slow 4) $ run 10)
      # cut "-1"
do
   d1 $
      whenmod 6 4 (0.5 ~>) $
      every 5 (density 3) $
      every 6 (# pan (tri1)) $
      slow 2 $ s "ec*2 *2 bin*1 peri*8 "
      # n (every 1 (density 1.25) $ every 4 (rev) $ every 2 (rev) $ every 1 (density 3) $ run 1)
      # cut "-1"
   d2 $
      every 2 (density (4/3)) $
      whenmod 5 2 (stut' 3 (0.0625*3) (|*| speed "1.5")) $
      whenmod 5 3 (degrade) $
      every 2 (0.25 <~) $
      every 6 (chop 16) $
      slow 2 $ s "eh*4 ef*2 ek*8 31*2 "
      # n (every 4 (palindrome) $ every 2 (0.25 ~>) $ "11 3")
      # cut "-1"
   d3 $
      whenmod 8 6 (palindrome) $
      every 1 (density 1.5) $
      whenmod 6 4 (slow (8/3)) $
      every 3 (# up "3") $
      whenmod 8 6 (0.25 ~>) $
      slow 2 $ s "ai*4  bin*1 eh*4 "
      # n (every 2 (palindrome) $ every 1 (rev) $ "12 1 11 3 10 4 8 10")
      # cut "-1"
do
   d1 $
      whenmod 5 2 (# speed "0.5") $
      every 5 (0.125 <~) $
      whenmod 6 3 (trunc (3/8)) $
      slow 2 $ s "peri*2 ch*1 ch*1 peri*1 "
      # n (every 4 (density 1.25) $ run 6)
      # cut "-1"
   d2 $
      whenmod 5 2 (0.125 ~>) $
      whenmod 5 3 (# up "3") $
      whenmod 5 2 (# shape "0.4") $
      slow 2 $ s "k*2 peri*2 peri*1 ch*1 "
      # n (every 2 (palindrome) $ "7 4 12 5")
      # cut "1 4 2 4 2 3"
   d3 $
      whenmod 7 5 (# accelerate "-0.25") $
      whenmod 6 4 (stut' 5 (0.125) (|*| speed "1.5")) $
      slow 2 $ s "ch*4 ch*1 ec*2 peri*2 "
      # n (every 3 (slow 3) $ run 3)
      # cut "-1"
